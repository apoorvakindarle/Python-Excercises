# Author Apoorva Kindarle
# Ex 06 Plot the graph using Bokeh

import pandas as pd
from bokeh.plotting import figure, output_file, show
import numpy as np
from bokeh.palettes import Category20c
from bokeh.transform import cumsum
from math import pi

data = pd.read_csv('SSE_Faculty.csv')
data = data.replace(np.nan, 0)
print("\n This is a raw data")
print(data)

# Number of courses per each program per each Academic Year
course_count = data.groupby('Program')[['Load 19-20', 'Load 20-21', 'Load 21-22', 'Load 22-23']].sum()
print("\n Number of courses per each program per each Academic Year ")
print(course_count)

# Average number of courses per faculty per Academic Year
average_count = data
average_count['Average number of Courses'] = data[['Load 19-20', 'Load 20-21', 'Load 21-22', 'Load 22-23']].mean(axis=1)
average_count[['ID', 'Average number of Courses']]
print('\n Average of courses per each program per each Academic Year')
print(average_count)

# Number of underloaded/overloaded faculty per each AcademicYear
under19_20 = 0
over19_20 = 0

for item in data['Balance 19-20']:
    if item > 0:
        over19_20 += 1
    elif item < 0:
        under19_20 += 1
print("\n")
print('For Academic Year 2019-2020')
print('Number of overloaded Faculty:', str(over19_20))
print('Number of underloaded Faculty:', str(under19_20))

under20_21 = 0
over20_21 = 0

for item in data['Balance 20-21']:
    if item > 0:
        over20_21 += 1
    elif item < 0:
        under20_21 += 1
print("\n")
print('For Academic Year 2020-2021')
print('Number of overloaded Faculty:', str(over20_21))
print('Number of underloaded Faculty:', str(under20_21))

under21_22 = 0
over21_22 = 0

for item in data['Balance 21-22']:
    if item > 0:
        over21_22 += 1
    elif item < 0:
        under21_22 += 1

print("\n")
print('For Academic Year 2021-2022')
print('Number of overloaded Faculty:', str(over21_22))
print('Number of underloaded Faculty:', str(under21_22))

under22_23 = 0
over22_23 = 0

for item in data['Balance 22-23']:
    if item > 0:
        over22_23 += 1
    elif item < 0:
        under22_23 += 1

print("\n")
print('For Academic Year 2022-2023')
print('Number of overloaded Faculty:', str(over22_23))
print('Number of underloaded Faculty:', str(under22_23))

# Bokeh graphs
# line graph part 1
output_file("Courses.html")
courses = course_count[['Load 19-20', 'Load 20-21', 'Load 21-22', 'Load 22-23']].values.tolist()

x = [2019, 2020, 2021, 2023]
y1 = courses[0]
y2 = courses[1]
y3 = courses[2]

p = figure(x_axis_label="Years", y_axis_label="Courses", title="Courses per academic year")

p.line(x, y1, legend_label="EM", color="red", line_width=2)
p.line(x, y2, legend_label="SSW", color="green", line_width=2)
p.line(x, y3, legend_label="SYS", color="blue", line_width=2)
show(p)
# source - bokeh official website

#  Average number of courses per faculty over the years
#  Bar Plot part 2
output_file("Average.html")
ID = list(average_count['ID'].astype(str))
avg = list(average_count['Average number of Courses'])

p = figure(x_range=ID, height=350, title="Average number of courses per faculty over the years",
           toolbar_location=None, tools="")
p.vbar(x=ID, top=avg, width=0.9)

p.y_range.start = 0
xa, ya = p.axis
xa.axis_label = 'ID'
ya.axis_label = 'Number of Courses'

show(p)

# Number of underloaded faculty over the years
# Line Plot part 3
output_file("Underload.html")

x = [2019, 2020, 2021, 2023]
y = [under19_20, under20_21, under21_22, under22_23]

p = figure(title="Number of underloaded faculty over the years", x_axis_label="Years", y_axis_label="ID")
p.line(x, y, legend_label="Years.", line_width=2)
show(p)
# code from official bokeh website

# Courses by program in 22-23
# pie chart part 4
output_file("courses.html")

pie_data = list(course_count['Load 22-23'])
x = {'EM': pie_data[0], 'SSW': pie_data[1], 'SYS': pie_data[2], }
Courses = ['EM', 'SSW', 'SYS']

data = pd.Series(x).reset_index(name='value').rename(columns={'index': 'Program'})
data['angle'] = data['value'] / data['value'].sum() * 2 * pi
data['color'] = Category20c[len(x)]

pie_chart = figure(title="Courses by program in '22-'23", tooltips="@Program: @value", x_range=(-0.5, 1.0))
pie_chart.wedge(x=0, y=1, radius=0.4,
                start_angle=cumsum('angle', include_zero=True), end_angle=cumsum('angle'),
                line_color="white", fill_color='color', legend_group='Program', source=data)
show(pie_chart)
# source - Bokeh official website
